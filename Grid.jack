class Grid{
    field Array grid ; 
    field int rows,cols;
    function void init(){
        return ; 
    }
    constructor Grid new(int Bx , int By ){
        var int i,j ; 
        var bool ff; 
        let rows = By ; 
        let cols = Bx ; 
        let grid = Array.new(Math.multiply(Bx,By));
        let i =0 ; 
        let ff = false ; 
        while(i<By){
            let j=0; 
            while(j < Bx ){
                let grid[j + Math.multiply(i,64)]= Math.min(2,j & 3) + 1 ;
                let j=j+1; 
            }
            let i=i+1; 
        }
    return this;
    }
    method void draw(){
        var int i,j ;
        var bool ff; 
        let i = 0;
        let ff=false;
        while(i<rows){
            let j=0; 
            while(j < cols ){
                do drawIndex(j,i);
                let j=j+1; 
        }
        let i=i+1; 
        }
        return;
    }
    method void erase(){
        var int i,j ;
        let i = 0;
        while(i<rows){
            let j=0; 
            while(j < cols ){
                do eraseIndex(j,i);
        }
        let i=i+1; 
        }
        return;
    }
    method void drawIndex(int j , int i ){
         do Block.draw((j&1) = 1, grid[j + Math.multiply(i,64)],Math.multiply(8,j) , Math.multiply(8,i));
      

        return ; 
    }
    method void eraseIndex(int j , int i ){
        let grid[j + Math.multiply(i,64)] = 0 ; 
         do Block.erase((j&1) = 1,Math.multiply(8,j) , Math.multiply(8,i));
        return ;
    }
    method bool emptyGrid(){
        return true ;
    }
    method void setValueIndex(){
        return ; 
    }
    method int getType(int j, int i){
        return grid[j + Math.multiply(i,64)]; 
    }


}